{"version":3,"sources":["Components/Movie.js","Components/MoviesContainer.js","Components/Config-M-UI/SearchParamConfig.js","Components/SearchParams.js","Components/FavoriteMovies/Movie.js","Components/FavoriteMovies/FavoriteMovies.js","App.js","serviceWorker.js","index.js"],"names":["Movie","title","year","poster","id","addingMovies","className","src","alt","style","fontSize","color","IconButton","edge","data-id","aria-label","onClick","red","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","divider","margin","MoviesContainer","movies","staticMovies","classes","useState","JSON","parse","localStorage","getItem","moviesArray","setMoviesArray","e","currentTarget","dataset","movieToBeAdded","undefined","filter","movie","imdbID","prevMovie","useEffect","moviesArrayToBeClean","cleanMoviesArray","Set","map","setItem","stringify","Grid","container","slice","xs","sm","item","key","Title","Year","Poster","menuButton","marginRight","marginLeft","breakpoints","down","display","fontFamily","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","transition","transitions","create","SearchParams","value","setValue","setMovies","setStaticMovies","axios","get","then","data","movieArray","Search","staticMovieArray","AppBar","Toolbar","to","textDecoration","Typography","variant","noWrap","onSubmit","preventDefault","InputBase","placeholder","input","inputProps","onChange","target","maxWidth","marginTop","background","boxShadow","details","flexDirection","content","flex","typo","cover","flexBasis","removeMovie","moreInfo","Card","CardContent","component","CardMedia","image","data-title","cursor","FavoriteMovies","favoriteMoviesArray","setFavoriteMoviesArray","updatedMoviesArray","movieInfo","window","open","App","Fragment","CssBaseline","Container","fixed","exact","path","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.616bc355.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/Movie.css'\nimport { red } from '@material-ui/core/colors';\n\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport IconButton from '@material-ui/core/IconButton'\n\n\nfunction Movie({ title, year, poster, id, addingMovies }) {\n\n  return (\n    <div className='Mycontainer'>\n      <img src={`${poster}`} alt={`${title}`} className='image' />\n      <div className='overlay'>\n        <div style={{ fontSize: '.9rem', color: 'yellow' }}>{title}</div>\n        <div className='secondRow'>\n          <div className='item' style={{ fontSize: '.8rem', color: 'yellow' }}>Year: {year}</div>\n          <div className='item'>\n            <IconButton\n              edge=\"start\"\n              id={id}\n              data-id={id}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={addingMovies}\n            >\n              <FavoriteTwoToneIcon style={{ fontSize: 25, color: red[500] }} />\n\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Movie;","import React, { useState, useEffect } from 'react';\nimport Movie from '../Components/Movie';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nfunction MoviesContainer({ movies, staticMovies }) {\n  const classes = useStyles();\n  const [moviesArray, setMoviesArray] = useState(JSON.parse(localStorage.getItem('movieArrayInLocalStorage')) || []);\n\n  const addingMovies = (e) => {\n    const id = e.currentTarget.dataset.id;\n    const movieToBeAdded = movies === undefined ? (staticMovies.filter(movie => movie.imdbID === id)) : movies.filter(movie => movie.imdbID === id)\n\n    setMoviesArray(prevMovie => [...prevMovie, ...movieToBeAdded])\n  }\n\n\n  useEffect(() => {\n    const moviesArrayToBeClean = moviesArray;\n\n    //new Set() will return an array with unique values, meaning that we will not have repetitive movies added to local storage\n\n    const cleanMoviesArray = [...new Set(moviesArrayToBeClean.map(movie => movie))]\n\n    localStorage.setItem('movieArrayInLocalStorage', JSON.stringify(cleanMoviesArray));\n  }, [moviesArray]);\n\n\n\n  return (\n\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n\n        {\n          movies === undefined ? (\n            staticMovies.slice(0, 8).map(movie =>\n              (<Grid xs={6} sm={3} item className={classes.divider} key={movie.imdbID}>\n                <Movie\n                  key={movie.imdbID}\n                  title={movie.Title}\n                  year={movie.Year}\n                  poster={movie.Poster}\n                  id={movie.imdbID}\n                  className={classes.paper}\n                  movies={movies}\n                  addingMovies={addingMovies}\n                />\n\n              </Grid>)\n            )\n          ) : (\n              movies.slice(0, 8).map(movie => (\n                <Grid xs={6} sm={3} item className={classes.divider} key={movie.imdbID}>\n\n                  {/* <div className={classes.paper}></div> */}\n                  <Movie\n                    key={movie.imdbID}\n                    title={movie.Title}\n                    year={movie.Year}\n                    poster={movie.Poster}\n                    id={movie.imdbID}\n                    className={classes.paper}\n                    movies={movies}\n                    addingMovies={addingMovies}\n                  />\n\n                </Grid>\n              ))\n            )\n        }\n      </Grid>\n    </div>\n\n\n  )\n}\n\nexport default MoviesContainer;","import { makeStyles, fade } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(40),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.down('sm')]: {\n      marginRight: theme.spacing(7),\n      marginLeft: 0,\n\n    },\n\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n\n    fontSize: '2rem',\n    fontFamily: 'Courgette',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: 40,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n}));\n\nexport default useStyles;","import React, { useState, useEffect } from 'react';\n\n\nimport axios from 'axios';\n// import { Link } from '@reach/router'; // this link will be used with the like button to rederect to liked movies\nimport MoviesContainer from './MoviesContainer';\nimport { AppBar, Toolbar, IconButton, Typography, InputBase } from '@material-ui/core';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { red } from '@material-ui/core/colors';\nimport useStyles from './Config-M-UI/SearchParamConfig';\nimport { Link } from 'react-router-dom';\n\n\n\n\n\n\nfunction SearchParams() {\n\n  const [value, setValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [staticMovies, setStaticMovies] = useState([]);\n  const classes = useStyles();\n\n  const STATIC_MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"\n\n\n\n  useEffect(() => {\n\n    axios.get(`https://www.omdbapi.com/?s=${value}&apikey=57c3c48f`)\n      .then((data) => {\n        const movieArray = data.data.Search;\n        setMovies(movieArray)\n      })\n\n\n  }, [value])\n\n\n  useEffect(() => {\n    axios.get(STATIC_MOVIE_API_URL).then((data) => {\n      const staticMovieArray = data.data.Search;\n      setStaticMovies(staticMovieArray)\n    })\n  }, [])\n\n\n\n\n  return (\n    <div>\n      <div className='navbar'>\n\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Link to='/favorites' style={{ textDecoration: 'none', color: 'white' }}>\n\n                <IconButton\n                  edge=\"start\"\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                >\n                  <FavoriteTwoToneIcon style={{ fontSize: 40, color: red[500] }} className=\"favIcon\" />\n                  <Typography style={{ fontSize: '.9rem' }} className={classes.title}>Favorites</Typography>\n                </IconButton>\n\n              </Link>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                MovieApp\n              </Typography>\n              <form onSubmit={e => {\n                e.preventDefault()\n\n              }}>\n\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={e => (setValue(e.target.value))}\n                  />\n                </div>\n              </form>\n            </Toolbar>\n          </AppBar>\n        </div>\n      </div>\n\n      <div className='moviesContainer'>\n        <MoviesContainer movies={movies} style={{ margin: '1rem' }} staticMovies={staticMovies} />\n      </div>\n    </div >\n  )\n}\n\n\n\n\n\nexport default SearchParams;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    maxWidth: 360,\n    height: 250,\n    marginTop: '2vh',\n    background: '#B5C588',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 3,\n\n\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n\n    flex: '1 0 auto',\n    margin: '0 auto',\n    padding: '16px  10px 16px 10px'\n\n  },\n  typo: {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 15\n\n    },\n  },\n  cover: {\n    flexBasis: '40vh',\n    width: 290,\n  },\n}));\n\n\nconst Movie = ({ title, year, poster, id, removeMovie, moreInfo }) => {\n  const classes = useStyles();\n\n\n  return (\n    <Card className={classes.root} >\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h6\" className={classes.typo} >\n            {title}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.typo} style={{ marginTop: '1rem' }}>\n            {year}\n          </Typography>\n        </CardContent>\n\n\n        <IconButton\n          aria-label=\"play/pause\"\n          data-id={id}\n          onClick={removeMovie}>\n\n          <BackspaceIcon color='secondary' />\n        </IconButton>\n\n\n      </div >\n      <CardMedia\n        className={classes.cover}\n        image={`${poster}`}\n        title=\"movie poster\"\n        onClick={moreInfo}\n        data-title={title}\n        style={{ cursor: `pointer` }}\n      />\n    </Card>\n  )\n\n}\n\nexport default Movie;","import React, { useState, Fragment, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport Movie from './Movie';\nimport './FMstyles.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n\n  },\n  menuButton: {\n    marginRight: theme.spacing(50),\n    [theme.breakpoints.down('sm')]: {\n      marginRight: theme.spacing(10),\n      marginLeft: theme.spacing(0),\n\n    },\n  },\n  title: {\n    flexGrow: 1,\n\n    fontSize: '2rem',\n    fontFamily: 'Courgette',\n\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1.2rem',\n    },\n\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\n\n\nconst FavoriteMovies = () => {\n  const classes = useStyles();\n  const [favoriteMoviesArray, setFavoriteMoviesArray] = useState(JSON.parse(localStorage.getItem('movieArrayInLocalStorage')) || [])\n\n  const removeMovie = (e) => {\n    const id = e.currentTarget.dataset.id;\n    const updatedMoviesArray = favoriteMoviesArray.filter(movie => movie.imdbID !== id);\n\n    setFavoriteMoviesArray(updatedMoviesArray)\n  }\n\n  const moreInfo = (e) => {\n    const title = e.currentTarget.dataset.title;\n    const movieInfo = `https://en.wikipedia.org/wiki/${title}`\n    window.open(movieInfo, \"_blank\")\n  }\n\n\n\n  useEffect(() => {\n    localStorage.setItem('movieArrayInLocalStorage', JSON.stringify(favoriteMoviesArray));\n  }, [favoriteMoviesArray])\n\n\n  return (\n    <Fragment>\n\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link to='/'>\n\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <HomeIcon color=\"secondary\" fontSize=\"large\" />\n              </IconButton>\n\n            </Link>\n\n            <Typography variant=\"h5\" className={classes.title}>\n              Favorite Movies\n            </Typography>\n\n          </Toolbar>\n        </AppBar>\n\n\n      </div>\n\n      <Grid container spacing={3}>\n        {favoriteMoviesArray === [] ? '' : (\n\n          favoriteMoviesArray.map(movie => (\n\n            <Grid item xs={6} sm={4} key={movie.imdbID}>\n\n              <Movie\n\n                key={movie.imdbID}\n                title={movie.Title}\n                year={movie.Year}\n                poster={movie.Poster}\n                id={movie.imdbID}\n\n                removeMovie={removeMovie}\n                moreInfo={moreInfo}\n              />\n\n            </Grid>\n          ))\n        )\n        }\n      </Grid>\n\n    </Fragment>\n\n\n  );\n}\n\nexport default FavoriteMovies;","import React from 'react';\nimport SearchParams from './Components/SearchParams';\nimport FavoriteMovies from './Components/FavoriteMovies/FavoriteMovies'\n// import './App.css'\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Container from '@material-ui/core/Container';\nimport { Route } from 'react-router-dom';\n\n\n\nfunction App() {\n\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container fixed component=\"div\">\n\n        <Route exact path=\"/\" component={SearchParams} />\n        <Route exact path=\"/favorites\" component={FavoriteMovies} />\n\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter basename=\"/\"><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}